name: Release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"

      - name: Install dependencies
        run: npm ci

      - name: Check types
        run: npm run check-types

      - name: Linting
        run: npm run eslint

      - name: Code styling (prettier)
        run: npm run prettier

      - name: Tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npm run semantic-release

  deploy:
    name: Deploy Gnosis Design System
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        id: aws-credentials-prod
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build:design-system

      - name: Deploy to S3 bucket
        run: |
          aws s3 sync design-system/ s3://${{ secrets.CDN_BUCKET_NAME }}/

      - name: Invalidate CloudFront cache and wait until complete
        run: |
          INVALIDATION_ID=`aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_ID }} --paths "/*" | jq -r .Invalidation.Id`
          aws cloudfront wait invalidation-completed --distribution-id ${{ secrets.CDN_ID }} --id $INVALIDATION_ID

      # - name: Remove old files
      #   run: |
      #     aws s3 sync dist/ s3://${{ secrets.CDN_BUCKET_NAME }}/ --delete
